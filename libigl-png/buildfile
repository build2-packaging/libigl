# Default Targets and Package Files
#
./: liba{igl-png} manifest legal{LICENSE*} doc{*.md}
./: tests/: install = false

# Imports
#
# Make sure the build is consistently setting precompilation
# by reading the metadata from the libigl module dependency.
#
import! [metadata, rule_hint=cxx.link] igl = libigl-opengl%liba{igl-opengl}
precompiled = [bool] $($igl: libigl_opengl.precompiled)
#
libs = $igl
import libs += stb_image%lib{stb_image}
import libs += stb_image_write%lib{stb_image_write}

# Headers
#
liba{igl-png}: igl/png/hxx{*}

# Sources
#
{ixx cxx}{*}: dist = false
src_files = igl/png/{*.cpp}
./: file{$src_files}
cxx{stb_image}@./: dist = true
#
liba{igl-png}: cxx{*}
liba{igl-png}: cxx{$src_files}: include = $precompiled
liba{igl-png}: ixx{$src_files}: include = (!$precompiled)

# Dependencies
#
liba{igl-png}: $libs
liba{igl-png}: cxx.export.libs = $libs

# Build and Export Options
#
liba{igl-png}: cxx.export.poptions = "-I$src_root"
cxx.poptions =+ "-I$src_root"

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
#
if $version.pre_release
  liba{igl-png}: bin.lib.version = "-$version.project_id"
else
  liba{igl-png}: bin.lib.version = "-$version.major.$version.minor"

# Library Metadata
#
liba{igl-png}:
{
  export.metadata = 1 libigl_png
  libigl_png.precompiled = [bool] $precompiled
}

# Mark header and inclusion files as to be installed.
# Inclusion files are only installed when no precompilation is used.
#
{hxx ixx}{*}: install = include/igl/png/
